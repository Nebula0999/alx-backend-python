pipeline {
    agent any

    environment {
        PYTHON_VERSION = '3.10'
        VENV_DIR = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[
                url: 'https://github.com/alx-backend-python.git',
                credentialsId: 'your-credentials-id'
                ]]
            ])
            }
        }
        stage('Build Docker Image') {
            steps {
            script {
                dockerImage = docker.build("your-dockerhub-username/messaging_app:${env.BUILD_NUMBER}")
            }
            }
        }
        stage('Push Docker Image') {
            steps {
            withDockerRegistry([
                credentialsId: 'your-dockerhub-credentials-id',
                url: 'https://index.docker.io/v1/'
            ]) {
                script {
                dockerImage.push()
                }
            }
            }
        }
        stage('Set up Python') {
            steps {
                sh "python -m venv ${VENV_DIR}"
                sh ". ${VENV_DIR}/Scripts/activate && pip install --upgrade pip"
            }
        }
        stage('Install Dependencies') {
            steps {
                sh ". ${VENV_DIR}/Scripts/activate && pip3 install -r messaging_app/requirements.txt"
            }
        }
        stage('Lint') {
            steps {
                sh ". ${VENV_DIR}/Scripts/activate && pip install flake8 && flake8 messaging_app/"
            }
        }
        stage('Test') {
            steps {
                sh ". ${VENV_DIR}/Scripts/activate && pip install pytest && pytest messaging_app/tests/"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}